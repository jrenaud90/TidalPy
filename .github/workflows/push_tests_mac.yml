# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: MacOS Tests

on: [push, pull_request, workflow_dispatch]

jobs:

  test-macos:
    defaults:
      run:
        shell: bash -el {0}

    name: Test TidalPy on MacOS
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"
    steps:
      - uses: actions/checkout@v4
      - uses: conda-incubator/setup-miniconda@v3
        with:
          activate-environment: TidalPy_Test
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
          auto-activate-base: false

      - name: Conda info
        shell: bash -el {0}
        run: conda info

      - name: Install gcc-13  # openMP does not play nice with clang on MacOS; also some versions of macos use older gcc so there is a need to install latest.
        shell: bash -el {0}
        run: |
          brew install gcc@13
      
      - name: Upgrade pip
        run: python -m pip install --upgrade pip
        
      - name: Install burnman (if python != 3.12)
        # Currently released version of burnman does not support py 3.12; so skip its tests for py3.12
        shell: bash -el {0}
        if: ${{ matrix.python-version != '3.12' }}
        run: python -m pip install burnman
        
      - name: Install package
        shell: bash -el {0}
        run: |
          conda install pytest matplotlib numba numpy scipy cython
          export CC='gcc-13'
          export CPPFLAGS="$CPPFLAGS -Xpreprocessor -fopenmp"
          python -m pip install -v .

      - name: Run pytest
        shell: bash -el {0}
        run: pytest --capture=sys -v Tests/
