# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: TidalPy Push Tests

on: push

jobs:
  # Run lint to check syntax.
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install flake8
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  # Run a test suite with numba off to somewhat test functionality but more to get coverage.
  test-no-numba:
    runs-on: ubuntu-latest
    env:
      NUMBA_DISABLE_JIT: 1
    strategy:
      matrix:
        group: [ 1, 2, 3, 4, 5 ]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest pytest-cov pytest-split
          python -m pip install -r requirements.txt
      - name: Install Additional Dependencies
        run: |
          sudo apt-get install libgeos-dev
          python -m pip install -r additional_dependencies.txt
      - name: Run pytest
        run: python -m pytest --cov=TidalPy --splits 5 --group ${{ matrix.group }}
      - name: Upload coverage
        uses: actions/upload-artifact@v3
        with:
          name: coverage${{ matrix.group }}
          path: .coverage

  # Combine and upload coverage reports.
  coverage:
    needs: test-no-numba
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest pytest-cov pytest-split coverage
          python -m pip install -r requirements.txt
      - name: Download all artifacts
        # Downloads coverage1, coverage2, etc.
        uses: actions/download-artifact@v3
      - name: Run coverage
        run: |
          coverage combine coverage*/.coverage*
          coverage report --fail-under=50
          coverage xml
      - uses: codecov/codecov-action@v3.0.0

  # Run a test suite with numba off to somewhat test functionality but more to get coverage.
  other_os_tests:
    name: TidalPy Test ${{ matrix.os }} - Python v${{ matrix.version }}
    runs-on: ${{ matrix.os }}
    env:
      NUMBA_DISABLE_JIT: 1
    strategy:
      matrix:
        python-version: [ "3.7", "3.8", "3.9" ]
        os: [ubuntu-latest, windows-latest, macos-latest]
    steps:
      - uses: conda-incubator/setup-miniconda@v2
        with:
          auto-update-conda: true
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install pytest
          python -m pip install -r requirements.txt
      - name: Install Additional Dependencies
        run: | 
          python -m pip install -r additional_dependencies.txt
          conda install -c conda-forge --file additional_dependencies_conda.txt
      - name: Run pytest
        run: python -m pytest