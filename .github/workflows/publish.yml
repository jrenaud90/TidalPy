# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Upload Python Package

on: [release, workflow_dispatch]

jobs:

  build-wheel-macos:
    name: Build MacOS Wheels
    runs-on: macos-latest
    strategy:
      matrix:
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Build Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade build
      - name: Build package
        run: python -m build -w
      - name: Save wheel for later upload
        uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: dist

  build-wheel-windows:
    name: Build Windows Wheels
    runs-on: windows-latest
    strategy:
      matrix:
        python-version:
          - "3.7"
          - "3.8"
          - "3.9"
          - "3.10"

    steps:
      - uses: actions/checkout@v3
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Build Dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install --upgrade build
      - name: Build package
        run: python -m build -w
      - name: Save wheel for later upload
        uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: dist

  build-sdist-upload:
    name: Build sdist and upload all dist data
    needs:
      - build-wheel-macos
      - build-wheel-windows
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.9'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade build
    - name: Build sdist
      run: python -m build --sdist
    - name: Download all the dists
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    - name: Publish all wheels to PyPI
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
#
#    - name: Publish to Conda
#      uses: fcakyon/conda-publish-action@v1.3
#      with:
#        subDir: 'conda'
#        AnacondaToken: ${{ secrets.ANACONDA_TOKEN }}
#        platforms: 'win osx linux'